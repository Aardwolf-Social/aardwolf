map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
  listen 80;
  listen [::]:80;
  server_name localhost aardwolf-dev.social;

  # Setting root to /web because that is where
  # static files will (probably) live
  root /web;
  
  # Useful for Let's Encrypt
  location /.well-known/acme-challenge/ { allow all; }
  location / { return 301 https://$host$request_uri; }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name localhost aardwolf-dev.social;

  ####################
  # SECURITY WARNING #
  ####################
  #
  # Providing a state of the art TLS configuration
  # is beyond the scope of this documentation.
  #
  # You need to replace this comment with a proper
  # ssl configuration template for nginx.
  #
  # If you don't know were to start, you can get one here :
  # https://mozilla.github.io/server-side-tls/ssl-config-generator/
  #
  # This configuration file won't work without ssl configuration directives.

  keepalive_timeout    70;
  sendfile             on;
  client_max_body_size 0;

  # Setting root to /web because that is where
  # static files will (probably) live
  root /web;

  include includes/gzip.conf;

  location / {
    try_files $uri @proxy;
  }

  include includes/other-locations.conf;

  location @proxy {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Proxy "";
    proxy_pass_header Server;

    proxy_pass http://127.0.0.1:7878;
    proxy_buffering off;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    tcp_nodelay on;
  }

  error_page 500 501 502 503 504 /500.html;
}
